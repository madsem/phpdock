version: "3.8"
services:
  web:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - ${WEB_PORT:-80}:80
    volumes:
      - php-sock:/socket
      - ./:/var/www/html
    networks:
      - phpdock
    depends_on:
      - app

  app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
      args:
        - MY_PHP_VERSION=${PHP_VERSION}
    volumes:
      - php-sock:/socket
      - ./:/var/www/html
    networks:
      - phpdock
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
      args:
        - MY_MYSQL_VERSION=${MYSQL_VERSION}
    ports:
      - ${DB_PORT:-3306}:3306
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASS:-secret}"
      MYSQL_DATABASE: "${DB_NAME:-phpdock}"
      MYSQL_USER: "${DB_USER:-phpdock}"
      MYSQL_PASSWORD: "${DB_PASS:-secret}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    networks:
      - phpdock
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 45s
      interval: 10s
      retries: 10

  mail:
    image: mailhog/mailhog
    ports:
      - 8025:8025
    networks:
      - phpdock

  redis:
    image: redis:${REDIS_VERSION}
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks:
      - phpdock

volumes:
  php-sock:
  dbdata:
  redisdata:

networks:
  phpdock:
    driver: bridge
