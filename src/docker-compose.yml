services:
  web:
    platform: linux/amd64
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - ${WEB_PORT:-80}:80
    volumes:
      - php-sock:/socket
      - ./:/var/www/html
    networks:
      - phpdock
    depends_on:
      - app

  app:
    platform: linux/amd64
    build:
      context: ./docker/app
      dockerfile: Dockerfile
      args:
        - MY_PHP_VERSION=${PHP_VERSION}
    volumes:
      - php-sock:/socket
      - ./:/var/www/html
    networks:
      - phpdock

  singlestore:
    platform: linux/amd64
    build:
      context: ./docker/singlestore
      dockerfile: Dockerfile
    volumes:
      - singlestore_data:/data
    restart: always
    environment:
      ROOT_PASSWORD: ${DB_USER:-root}
      DB_NAME: ${DB_NAME:-phpdock}
      DB_USER: ${DB_USER:-root}
      DB_PASS: ${DB_PASS:-secret}
    command: ["bash", "-c", "/usr/local/bin/replace_env_vars.sh"]
    ports:
      - 3306:3306
      - 8080:8080
      - 9000:9000
    networks:
      - phpdock

  mail:
    platform: linux/amd64
    image: mailhog/mailhog
    ports:
      - 8025:8025
    networks:
      - phpdock

  redis:
    platform: linux/amd64
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks:
      - phpdock

volumes:
  php-sock:
  singlestore_data:
  redisdata:

networks:
  phpdock:
    driver: bridge
